else if (component.name.includes('icon')) {
      // top level - name, flexbox styles, width/height

      // name [0]
      buttonStyles.push(component.name);
      // flexbox styles [1]
      if (component.layoutMode === 'HORIZONTAL') {
        buttonStyles.push({ display: 'flex', flexDirection: 'row' });
      }
      // width/height [2]
      buttonStyles.push({
        width: `${component.absoluteBoundingBox.width}px`,
        height: `${component.absoluteBoundingBox.height}px`,
      });

      // one level deep - box-shadows

      //effect [3]
      if (component.children[0].effects.length > 0) {
        buttonStyles.push({
          boxShadow: `${component.children[0].effects[0].offset.x}px ${component.children[0].effects[0].offset.y}px ${component.children[0].effects[0].radius}px rgba(${component.children[0].effects[0].color.r}, ${component.children[0].effects[0].color.g}, ${component.children[0].effects[0].color.b}, ${component.children[0].effects[0].color.a})`,
        });
      } else {
        buttonStyles.push(undefined);
      }

      // two levels deep - background color, padding, border styles

      // border styles [4]
      if (component.children[0].children[0].strokes.length > 0) {
        buttonStyles.push({
          border: `${
            component.children[0].children[0].strokeWeight
          }px ${component.children[0].children[0].strokes[0].type.toLowerCase()} ${rgbToHex(
            component.children[0].children[0].strokes[0].color.r * 255,
            component.children[0].children[0].strokes[0].color.g * 255,
            component.children[0].children[0].strokes[0].color.b * 255
          )}`,
        });
      } else {
        buttonStyles.push(undefined);
      }

      // background color [5]
      buttonStyles.push({
        backgroundColor: `${rgbToHex(
          component.children[0].children[0].backgroundColor.r * 255,
          component.children[0].children[0].backgroundColor.g * 255,
          component.children[0].children[0].backgroundColor.b * 255
        )}`,
      });

      // padding [6]
      buttonStyles.push({
        padding: `${component.children[0].children[0].verticalPadding}px ${component.children[0].children[0].horizontalPadding}px`,
      });

      // three levels deep - text styles

      component.children[0].children[0].children.forEach((child) => {
        if (child.type === 'TEXT') {
          buttonStyles.push({
            fontFamily: child.style.fontFamily,
            fontWeight: child.style.fontWeight,
            fontSize: child.style.fontSize,
            letterSpacing: child.style.letterSpacing,
            lineHeight: child.style.lineHeightPx,
            color: `${rgbToHex(
              child.fills[0].color.r * 255,
              child.fills[0].color.g * 255,
              child.fills[0].color.b * 255
            )}`,
          });
        }
      });
    }