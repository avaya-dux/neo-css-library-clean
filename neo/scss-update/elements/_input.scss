// updated input styles

@mixin input--editable {
  &--editable {
    display: flex;
    flex-wrap: wrap;
    min-height: $input-height - 2 * $input-padding-y;

    > * {
      margin-bottom: 0 !important;
    }

    .neo-chip {
      line-height: $input-line-height;
      padding-bottom: 0;
      padding-top: 0;
    }

    .neo-input {
      border: 0;
      box-shadow: none;
      flex-grow: 1;
      padding: 0;
      width: auto;
    }
  }
}

@mixin input--states {
  @each $state-color-name, $state-color-value in $input-state-color-map {
    &--#{$state-color-name} {
      border-color: $state-color-value;

      &:focus {
        border-color: $state-color-value;
      }
    }
  }
}

.neo-input {
  // background-color: $input-background-color;
  background-image: none;
  border: $input-border-width $input-border-style $input-border-color;
  border-radius: 4px;
  box-shadow: $input-box-shadow;
  box-sizing: border-box;
  color: $input-font-color;
  display: block;
  font-family: inherit;
  font-size: $input-font-size;
  line-height: $input-line-height;
  min-height: $input-height;
  padding: $input-padding-y $input-padding-x;
  min-width: $input-width;
  width: 100%;

  &[readonly] {
    background-color: transparent;
  }

  &[disabled] {
    background-color: $input-disabled-bg;
    color: $input-disabled-color;
    cursor: not-allowed;
  }

  label > &,
  label + & {
    margin-top: $input-in-label-margin-top;
  }

  &:focus {
    box-shadow: $input-focus-shadow;
    outline: none;
  }

  &::-webkit-input-placeholder {
    font-style: $input-placeholder-font-style;
  }
  &::-moz-placeholder {
    font-style: $input-placeholder-font-style;
  }
  &:-ms-input-placeholder {
    font-style: $input-placeholder-font-style;
  }
  &::placeholder {
    font-style: $input-placeholder-font-style;
  }

  @include input--editable;
  @include input--states;
}

//  input error validation wrapper and input

.neo-input-error__wrapper {
  display: flex;
  flex-direction: row;
  border: $input-border-style $input-border-width $input-asterix-required-color;
  width: $input-width;
  min-height: $input-height;
  border-radius: 2px;
  & input,
  & textarea {
    border: none;
  }
  & .neo-input-error__icon {
    display: flex;
    flex-direction: column;
    justify-content: center;
    color: $input-asterix-required-color;
    //hard-coded for now
    padding-right: 11px;
  }
}

.neo-input-hint-error {
  // hard-coded margin for now
  margin-top: 4px;
  color: $input-asterix-required-color;
}

// input placeholder wrapper

.neo-input-readonly {
  border: none;
  padding-left: $input-readonly-padding;
}

// editable input style

.neo-input-editable__wrapper {
  border-radius: 4px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  border: $input-border-style $input-border-width $input-border-color;
  min-height: $input-height;
  min-width: $input-width;
  & input,
  & textarea {
    flex-grow: 1;
    border: none;
    min-width: 0;
  }
  & .neo-input-edit__icon {
    display: flex;
    flex-direction: column;
    justify-content: center;
    border: none;
    background-color: $global-background;
    color: $input-clear-button-color;
    // hard-coded for now
    padding: 11px;
    &:hover {
      cursor: pointer;
    }
    &::before {
      font-size: 16px;
    }
    &-disabled {
      background-color: $input-disabled-bg;
    }
  }
}
