//
// Tables
//

@mixin neo-table-children {
  thead,
  tbody,
  tfoot {
    background-color: $table-background;
    border: $table-border;
  }

  td,
  th {
    padding: $table-padding;
    text-align: left;
    vertical-align: middle;

    @include rtl-selector {
      text-align: right;
    }

    .neo-input,
    .neo-input-group,
    .neo-btn,
    .neo-button-group,
    .neo-label,
    .neo-chip,
    .neo-switch,
    .neo-group-list {
      margin-bottom: 0;
    }
  }

  .neo-table--disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }

  th {
    background-color: $table-head-background;
    color: $table-head-font-color;
  }

  td {
    border-top: $table-border;
  }

  thead th {
    vertical-align: bottom;
  }

  tfoot {
    background-color: $table-foot-background;
    color: $table-foot-font-color;
  }
}

@mixin neo-table--bordered {
  &--bordered {
    th,
    td {
      border: $table-border;
    }
  }
}

@mixin neo-table--striped {
  &--striped {
    tbody tr:nth-of-type(#{$table-stripe}) {
      background-color: $table-striped-background;

      @if $table-stripe == even {
        border-bottom: 0;
      }
    }

    @if $table-stripe == odd {
      thead th {
        background: $table-background;
      }
    }
  }
}

@mixin neo-table--hover {
  &--hover {
    thead tr:hover {
      background-color: $table-head-hover;
    }

    tbody tr:hover {
      background-color: $table-row-hover;
      cursor: pointer;
    }

    tfoot tr:hover {
      background-color: $table-foot-row-hover;
    }
  }
}

@mixin neo-table--condensed {
  &--condensed {
    th,
    td {
      padding: $table-condensed-padding;
    }
  }
}

@mixin neo-table--responsive {
  &--responsive {
    display: block;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    overflow-x: auto;
    width: 100%;
  }
}

@mixin neo-table--sticky($axis, $position) {
  th {
    position: sticky;
    // Resolves issue with defined border-spacing
    #{$position}: -$table-border-width;
  }
  overflow-#{$axis}: auto;
  padding-#{$position}: 0;
}

@mixin table-sort-order($orderName, $orderIcon) {
  &.neo-table--#{$orderName} {
    background-color: $table-sortable-background-active;

    &::after {
      content: $orderIcon;
    }
  }
}

@mixin neo-table--sortable {
  /* stylelint-disable selector-no-qualifying-type */
  &--sortable {
    th {
      cursor: pointer;
      padding-right: $table-sortable-icon-margin-x * 2 +
        $table-sortable-icon-size;
      position: relative;

      &:hover {
        background-color: $table-sortable-background-hover;
      }

      &::after {
        font-family: 'AOC-Icons';
        font-size: $table-sortable-icon-size;
        line-height: $table-sortable-icon-line-height;
        position: absolute;
        right: $table-sortable-icon-margin-x;
      }

      @include table-sort-order(ascending, '\e9a1');
      @include table-sort-order(descending, '\e9a0');
    }
  }
  /* stylelint-enable selector-no-qualifying-type */
}

@mixin neo-table--editable {
  &--editable {
    background-color: $table-editable-bg-color;

    > td {
      @include neo-table--editable-border;
    }
  }
}

@mixin neo-table--editable-border {
  &:first-child {
    position: relative;

    &::before {
      border-left: $table-editable-border;
      content: '';
      height: 100%;

      @include rtl-selector {
        left: auto;
        right: 0;
      }
      @include position(absolute, 0, null, null, 0);
    }
  }
}

@mixin neo-table-buttons {
  :not(.neo-button-group) > .neo-btn {
    margin-right: $table-button-margin;

    @include rtl-selector {
      margin: {
        left: $table-button-margin;
        right: 0;
      }
    }

    &:last-child {
      margin-right: 0;

      @include rtl-selector {
        margin-left: 0;
      }
    }
  }
}

.neo-table__container--sticky {
  @include neo-table--sticky(x, top);
}

.neo-table__container--vsticky {
  @include neo-table--sticky(y, left);
}

.neo-table {
  background-color: transparent;
  border-collapse: collapse;
  empty-cells: show;
  margin-bottom: $global-spacer;
  max-width: 100%;
  width: 100%;

  @include neo-table-children;
  @include neo-table--bordered;
  @include neo-table--striped;
  @include neo-table--hover;
  @include neo-table--condensed;
  @include neo-table--responsive;
  @include neo-table--sortable;
  @include neo-table--editable;
  @include neo-table-buttons;
}

// updated table styles

@mixin neo-table-children-update {
  thead,
  tbody,
  tfoot {
    background-color: $table-background-update;
    // border: $table-border-update;
  }

  // styles to center checkbox in head

  th label {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  td,
  th {
    padding: $table-padding-update;
    text-align: left;
    vertical-align: middle;
    text-align: center;
    @include rtl-selector {
      text-align: right;
    }

    .neo-input-update,
    .neo-input-group-update,
    .neo-btn-update,
    .neo-button-group-update,
    .neo-label-update,
    .neo-chip-update,
    .neo-switch-update,
    .neo-group-list-update {
      margin-bottom: 0;
    }
  }

  .neo-table-update--disabled {
    cursor: not-allowed;
    opacity: 0.5;
    background-color: $table-disabled-bg-color-update;
    color: $table-disabled-text-color-update;
    & a {
      color: $table-disabled-clickable-color-update;
      cursor: not-allowed;
    }
  }

  th {
    background-color: $table-head-background-update;
    color: $table-head-font-color;
  }

  td {
    border-top: $table-border-update;
  }

  thead th {
    vertical-align: bottom;
  }

  tfoot {
    background-color: $table-foot-background;
    color: $table-foot-font-color;
  }
}

@mixin neo-table--bordered-update {
  &--bordered {
    th,
    td {
      border: $table-border-update;
    }
  }
}

@mixin neo-table--striped-update {
  &--striped {
    tbody tr:nth-of-type(#{$table-stripe}) {
      background-color: $table-striped-background;

      @if $table-stripe == even {
        border-bottom: 0;
      }
    }

    @if $table-stripe == odd {
      thead th {
        background: $table-background;
      }
    }
  }
}

@mixin neo-table--hover-update {
  &--hover {
    thead tr:hover {
      background-color: $table-head-hover;
    }

    tbody tr:hover {
      background-color: $table-row-hover-update;
      cursor: pointer;
    }

    tfoot tr:hover {
      background-color: $table-foot-row-hover;
    }
  }
}

@mixin neo-table--condensed-update {
  &--condensed {
    th,
    td {
      padding: $table-condensed-padding;
    }
  }
}

@mixin neo-table--responsive-update {
  &--responsive {
    display: block;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    overflow-x: auto;
    width: 100%;
  }
}

@mixin neo-table--sticky-update($axis, $position) {
  th {
    position: sticky;
    // Resolves issue with defined border-spacing
    #{$position}: -$table-border-width-update;
  }
  overflow-#{$axis}: auto;
  padding-#{$position}: 0;
}

@mixin table-sort-order-update($orderName, $orderIcon) {
  &.neo-table-update--#{$orderName} {
    background-color: $table-sortable-background-active;

    &::after {
      content: $orderIcon;
    }
  }
}

@mixin neo-table--sortable-update {
  /* stylelint-disable selector-no-qualifying-type */
  &--sortable {
    th {
      cursor: pointer;
      padding-right: $table-sortable-icon-margin-x * 2 +
        $table-sortable-icon-size;
      position: relative;

      &:hover {
        background-color: $table-sortable-background-hover;
      }

      &::after {
        font-family: 'AOC-Icons';
        font-size: $table-sortable-icon-size;
        line-height: $table-sortable-icon-line-height;
        position: absolute;
        right: $table-sortable-icon-margin-x;
      }

      @include table-sort-order-update(ascending, '\e9a1');
      @include table-sort-order-update(descending, '\e9a0');
    }
  }
  /* stylelint-enable selector-no-qualifying-type */
}

@mixin neo-table--editable-update {
  &--editable {
    background-color: $table-editable-bg-color;

    > td {
      @include neo-table--editable-border-update;
    }
  }
}

@mixin neo-table--editable-border-update {
  &:first-child {
    position: relative;

    &::before {
      border-left: $table-editable-border;
      content: '';
      height: 100%;

      @include rtl-selector {
        left: auto;
        right: 0;
      }
      @include position(absolute, 0, null, null, 0);
    }
  }
}

@mixin neo-table-buttons-update {
  :not(.neo-button-group-update) > .neo-btn-update {
    margin-right: $table-button-margin;

    @include rtl-selector {
      margin: {
        left: $table-button-margin;
        right: 0;
      }
    }

    &:last-child {
      margin-right: 0;

      @include rtl-selector {
        margin-left: 0;
      }
    }
  }
}

.neo-table-update__container--sticky {
  @include neo-table--sticky-update(x, top);
}

.neo-table-update__container--vsticky {
  @include neo-table--sticky-update(y, left);
}

.neo-table-update {
  background-color: transparent;
  border-collapse: collapse;
  empty-cells: show;
  margin-bottom: $global-spacer;
  max-width: 100%;
  width: 100%;

  // new table select styles

  &-page-select-update {
    height: $table-page-select-height;
    width: $table-page-select-width;
    display: flex;
    flex-direction: row;
    align-items: center;

    & > label {
      margin-right: 8px;
    }
    & > .neo-select-update {
      & > select {
        min-width: auto;
        // this is hard-coded for now
        width: $select-table-page-show-width-update;
        padding-left: $select-padding-left-update;
      }
      &:not(.neo-select--multiple)::after {
        right: $select-padding-right-update;
      }
    }
  }

  // new filter select styles

  & ~ .neo-form-control-update {
    & .neo-filter-update {
      width: 116px;

      padding-left: $select-padding-left-update;
      & ~ button {
        color: $global-text-color-update;
        background-color: $table-filter-button-color-update;
        // hard-coded padding for now
        padding: 12px 0;
        &:hover {
          box-shadow: none;
        }
      }

      // may not work on all browsers

      &::-webkit-input-placeholder {
        font-style: $input-placeholder-font-style-update;
      }
      &::-moz-placeholder {
        font-style: $input-placeholder-font-style-update;
      }
      &:-ms-input-placeholder {
        font-style: $input-placeholder-font-style-update;
      }
      &::placeholder {
        font-style: $input-placeholder-font-style-update;
      }
    }
  }

  @include neo-table-children-update;
  @include neo-table--bordered-update;
  @include neo-table--striped-update;
  @include neo-table--hover-update;
  @include neo-table--condensed-update;
  @include neo-table--responsive-update;
  @include neo-table--sortable-update;
  @include neo-table--editable-update;
  @include neo-table-buttons-update;
}

// new date picker styles - only webkit version for now

// placeholder date picker styles - hard-coded for now

.neo-date-picker-update {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 220px;
  height: 34px;
  font-size: 14px;
  font-style: italic;
  color: $table-date-picker-font-color-update;
  background-color: $table-date-picker-background-color-update;
  &::before {
    // hard-coded for now
    padding-right: 8px;
    content: 'MM DD YYYY';
  }
  &::after {
    // hard-coded for now
    padding-left: 8px;
    content: 'MM DD YYYY';
  }
}

// styles for sortable table heads

.sortable {
  display: flex;
  justify-content: space-between;
  &::after {
    // padding-left: 12px;
  }
}

// & ~ input[type='date' i] {
//   // background-color: red;
//   &::-webkit-datetime-edit-text {
//     display: none;
//   }
//   &::-webkit-datetime-edit-month-field {
//     color: blue;
//   }
//   &::-webkit-datetime-edit-day-field {
//     color: blue;
//   }
//   &::-webkit-datetime-edit-year-field {
//     color: blue;
//   }
// }
